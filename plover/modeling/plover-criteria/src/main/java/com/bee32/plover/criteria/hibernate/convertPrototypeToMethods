#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="hqv"
    long_opts="help,quiet,verbose,version"

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] "
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    # PropertyExpression geProperty String propertyName  String otherPropertyName
    while read -a array; do
        set "${array[@]}"
        [ -z "$1" ] && continue
        shift # return type
        method=$1
        shift

        name=`uc -e ${method:0:1}`${method:1}

        echo -n "    public static $name $method("

        decls=
        args=
        while [ $# != 0 ]; do
            ptype="$1"
            pname="$2"
            shift 2

            decls="$decls, $ptype $pname"
            args="$args, $pname"
        done

        if [ -n "$decls" ]; then
            decls="${decls:2}"
            args="${args:2}"
        fi

        echo "$decls) {"
        echo "        return new $name($args); "
        echo "    }"

    done
}

boot "$@"
