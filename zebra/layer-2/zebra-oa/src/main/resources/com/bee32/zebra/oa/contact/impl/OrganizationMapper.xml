<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bee32.zebra.oa.contact.impl.OrganizationMapper">

    <resultMap id="map1" type="com.bee32.zebra.oa.contact.Organization" extends="co.mapUSA">
        <result property="birthday" column="birthday" />
        <result property="langTag" column="locale" />
        <result property="timeZoneId" column="timezone" />
        <result property="customer" column="customer" />
        <result property="supplier" column="supplier" />
        <result property="subject" column="subject" />
        <result property="comment" column="comment" />
        <result property="bank" column="bank" />
        <result property="account" column="bankacc" />

        <result property="size" column="size" />
        <result property="taxId" column="taxId" />

        <collection property="contacts" javaType="ArrayList" columnPrefix="ct_"
            resultMap="com.bee32.zebra.oa.contact.impl.ContactMapper.map1" />
    </resultMap>

    <sql id="select1"><![CDATA[
        select
            a.*, c.*,
            u.label "uid_label",
            g.label "gid_label"
        from org a
            left join avct_contact c on a.id=c.ct_org and c.ct_usage is null
            left join "user" u on a.uid=u.id
            left join "group" g on a.gid=g.id
        ]]>
    </sql>

    <sql id="filtconds">
        <!-- co -->
        <if test="timeRange != null">and a.lastmod between #{timeRange.min, jdbcType=DATE} and #{timeRange.max, jdbcType=DATE}</if>
        <include refid="co.modefilt" />
        <!-- party -->
        <if test="ageRange != null">and (now() - birthday) between interval '#{ageRange.min} years' and interval '#{ageRange.max} years'
        </if>
        <if test="peer || type == 1">and peer</if>
        <if test="customer || type == 2">and customer</if>
        <if test="supplier || type == 3">and supplier</if>
        <!-- org -->
        <if test="type == 0">and not (peer or customer or supplier or shipper)</if>
        <if test="shipper || type == 4">and shipper</if>
        <if test="type == 5">and false</if>
    </sql>

    <select id="all" resultMap="map1">
        <include refid="select1" />
        <where>
            <include refid="co.modefilt" />
        </where>
    </select>

    <select id="filter" resultMap="map1">
        <include refid="select1" />
        <where>
            <include refid="filtconds" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="map1">
        <include refid="select1" />
        <where>
            <if test="_parameter != null">a.id=#{id}</if>
        </where>
    </select>

    <select id="insert" resultType="long"><![CDATA[
        insert into org(
            code, label, description,
            priority, flags, state, uid, gid, mode, acl,
            birthday, locale, timezone, customer, supplier,
            subject, bank, bankacc,
            size, taxid, shipper
        ) values(
            #{codeName},#{label},#{description},
            #{priority}, #{flags}, #{state}, #{owner.id}, #{ownerGroup.id}, #{accessMode}, #{acl},
            #{birthday}, #{langTag}, #{timeZoneId}, #{customer}, #{supplier}, 
            #{subject}, #{bank}, #{account},
            #{size}, #{taxId}, #{shipper}
        ) returning id
    ]]></select>

    <update id="update">
        update org
        <set>
            <include refid="co.setUSA" />
            <!-- party -->
            birthday=#{birthday},
            locale=#{langTag},
            timezone=#{timeZoneId},
            customer=#{customer},
            supplier=#{supplier},
            subject=#{subject},
            bank=#{bank},
            bankacc=#{account},
            <!-- person -->
            size=#{size},
            taxid=#{taxId},
            shipper=#{shipper}
        </set>
        where id=#{id}
    </update>

    <delete id="delete">
        delete from org where id=#{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "total" from org a
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
