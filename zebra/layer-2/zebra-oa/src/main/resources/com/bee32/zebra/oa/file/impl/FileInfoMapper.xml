<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bee32.zebra.oa.file.impl.FileInfoMapper">

    <resultMap id="map1" type="com.bee32.zebra.oa.file.FileInfo" extends="message.map2">
        <result property="dirName" column="dir" />
        <result property="baseName" column="base" />
        <result property="size" column="size" />
        <result property="sha1" column="sha1" />
        <result property="type" column="type" />
        <result property="encoding" column="encoding" />
        <result property="downloads" column="ndl" />
        <result property="value" column="val" />
        <association property="org" javaType="com.bee32.zebra.oa.contact.Organization">
            <id property="id" column="org" />
            <result property="label" column="org_label" />
        </association>
        <association property="person" javaType="com.bee32.zebra.oa.contact.Person">
            <id property="id" column="person" />
            <result property="label" column="person_label" />
        </association>
        <collection property="tags" javaType="ArrayList" ofType="com.tinylily.model.base.schema.TagDef">
            <id property="id" column="tag_id" />
            <result property="label" column="tag_label" />
        </collection>
    </resultMap>

    <sql id="select1"><![CDATA[
        select
            a.*,
            op.label "op_label",
            org.label "org_label",
            person.label "person_label",
            y.id "tag_id",
            y.label "tag_label",
            u.label "uid_label",
            g.label "gid_label"
        from fileinfo a
            left join "user" op on a.op=op.id
            left join org on a.org=org.id
            left join person on a.person=person.id
            left join filetag x on a.id=x.file
            left join tag y on x.tag=y.id
            left join "user" u on a.uid=u.id
            left join "group" g on a.gid=g.id
        ]]>
    </sql>

    <sql id="criteria">
        <!-- co -->
        <if test="timeRange != null">and a.lastmod between #{timeRange.min, jdbcType=DATE} and #{timeRange.max, jdbcType=DATE}</if>
        <include refid="co.modefilt" />
        <!-- moment-interval -->
        <if test="dateRange != null">and a.t0 between #{dateRange.min, jdbcType=DATE} and #{dateRange.max, jdbcType=DATE}</if>
        <if test="year != null">and extract(year from a.t0)=#{year}</if>
        <if test="noDate">and a.t0 is null</if>
        <if test="noYear">and a.t0 is null</if>
        <!-- message -->
        <if test="opId != null">and a.op=#{opId}</if>
        <if test="categoryId != null">and a.cat=#{categoryId}</if>
        <if test="tagId != null">and x.tag=#{tagId}</if>
        <if test="phaseId != null">and a.phase=#{phaseId}</if>
        <if test="voteCountRange != null">and a.nvote between #{voteCountRange.min} and #{voteCountRange.max}</if>
        <if test="likerCountRange != null">and a.nlike between #{likerCountRange.min} and #{likerCountRange.max}</if>
        <if test="readCountRange != null">and a.nread between #{readCountRange.min} and #{readCountRange.max}</if>
        <if test="noOp">and a.op is null</if>
        <if test="noCategory">and a.cat is null</if>
        <if test="noTag">and x.tag is null</if>
        <if test="noPhase">and a.phase is null</if>

        <if test="orgId != null">and a.org=#{orgId}</if>
        <if test="personId != null">and a.person=#{personId}</if>
        <if test="noOrg">and a.org is null</if>
        <if test="noPerson">and a.person is null</if>
    </sql>

    <select id="all" resultMap="map1">
        <include refid="select1" />
        <where>
            <include refid="co.modefilt" />
        </where>
    </select>

    <select id="filter" resultMap="map1">
        <include refid="select1" />
        <where>
            <include refid="criteria" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="map1">
        <include refid="select1" />
        <where>
            <if test="_parameter != null">a.id=#{id}</if>
        </where>
    </select>

    <select id="insert" resultType="long"><![CDATA[
        insert into fileinfo(
            code, label, description,
            priority, flags, state, uid, gid, mode, acl,
            t0, t1, op,
            dir, base, image, size, sha1, type, encoding,
            org, person, val
        ) values(
            #{codeName},#{label},#{description},
            #{priority}, #{flags}, #{state}, #{owner.id}, #{ownerGroup.id}, #{accessMode}, #{acl},
            #{beginDate}, #{endDate}, #{op.id},
            #{dirName}, #{baseName}, #{image}, #{size}, #{sha1}, #{type}, #{encoding},
            #{org.id}, #{person.id}, #{value}
        ) returning id
    ]]></select>

    <update id="update">
        update fileinfo
        <set>
            <include refid="message.set1u" />
            dir=#{dirName},
            base=#{baseName},
            image=#{image},
            size=#{size},
            sha1=#{sha1},
            type=#{type},
            encoding=#{encoding},
            <if test="org != null">org=#{org.id},</if>
            <if test="person != null">person=#{person.id},</if>
            val=#{value},
        </set>
        <where>
            <if test="id != null">id=#{id}</if>
        </where>
    </update>

    <delete id="delete">
        delete from fileinfo where id=#{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "total", sum(size) "total_size" from fileinfo

    </select>

    <select id="histoByYear" resultType="com.bee32.zebra.tk.util.F_YearCount"><![CDATA[
        select
            extract(year from t0)::int "year", 
            count(*) "count"
        from fileinfo
        group by extract(year from t0)::int
    ]]></select>

</mapper>
