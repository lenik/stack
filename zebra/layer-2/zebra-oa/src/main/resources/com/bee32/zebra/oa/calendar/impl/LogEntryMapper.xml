<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bee32.zebra.oa.calendar.impl.LogEntryMapper">

    <resultMap id="map1" type="com.bee32.zebra.oa.calendar.LogEntry" extends="co.mapUS">
        <result property="source" column="c" />
        <result property="id" column="id" />
        <result property="message" column="msg" />
        <result property="date" column="t0" />
        <result property="creation" column="creation" />
        <association property="op" javaType="net.bodz.lily.model.base.security.User">
            <result property="id" column="op" />
            <result property="label" column="op_label" />
        </association>
        <association property="form" javaType="net.bodz.lily.model.base.schema.FormDef">
            <result property="id" column="form" />
            <result property="label" column="form_label" />
        </association>
        <association property="category" javaType="net.bodz.lily.model.base.schema.CategoryDef">
            <result property="id" column="cat" />
            <result property="label" column="cat_label" />
        </association>
    </resultMap>

    <sql id="select1"><![CDATA[
        select
            a.*,
            op.label "op_label",
            form.label "form_label",
            cat.label "cat_label"
        from v_log a
            left join "user" op on a.op = op.id
            left join form on a.form = form.id
            left join cat on a.cat = cat.id
        ]]>
    </sql>

    <sql id="filtconds">
        <!-- co -->
        <include refid="co.modefilt" />
        <if test="timeRange != null">and a.creation between #{timeRange.min, jdbcType=DATE} and #{timeRange.max, jdbcType=DATE}</if>
        <!-- log-entry -->
        <if test="source != null">and a.c = #{source}</if>
        <if test="dateRange != null">and a.t0 between #{dateRange.min, jdbcType=DATE} and #{dateRange.max, jdbcType=DATE}</if>
        <if test="year != null">and extract(year from a.t0) = #{year}</if>
        <if test="noDate">and a.t0 is null</if>
        <if test="noYear">and a.t0 is null</if>
        <if test="opId != null">and a.op = #{opId}</if>
        <if test="noOp">and a.op is null</if>
        <if test="formId">and a.form = ${formId}</if>
        <if test="noForm">and a.form is null</if>
        <if test="categoryId != null">and a.cat = #{categoryId}</if>
        <if test="noCategory">and a.cat is null</if>
    </sql>

    <select id="all" resultMap="map1">
        <include refid="select1" />
    </select>

    <select id="filter" resultMap="map1">
        <include refid="select1" />
        <where>
            <include refid="filtconds" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="map1">
        <include refid="select1" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <select id="years" resultType="list">
        select distinct extract(year from coalesce(t0, creation)) "year"
        from v_log a
        order by year
        <where>
            <include refid="filtconds" />
        </where>
    </select>

</mapper>
