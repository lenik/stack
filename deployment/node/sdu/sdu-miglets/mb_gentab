#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 1853 2010-09-29 01:35:59Z lenik $'
    short_opts="fhqv"
    long_opts="force,help,quiet,verbose,version"

    force=0

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Generate default tabmap files for non-existing ones"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] [MIGDATA-DIR (default .)]"
    echo
    echo "Options: "
    echo "    -f, --force             Force to overwrite existing files"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -f|--force)
            force=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    [ -n "$1" ] && cd "$1"

    for f in 10incoming/*; do

        base="${f##*/}"
        name="${base%.*}"
        ext="${base##*.}"

        bcode="${name%%-*}"
        class="${name#*-}" # B-code
        class="${class%-*}" # HHMMSS
        class="${class%-*}" # YYYYMMDD
        class="$class-$bcode"

        case "$ext" in
        csv)
            tabmap="legacy/$class.tab"
            if [ ! -f "$tabmap" ] || [ $force = 1 ]; then
                _log1 "Generate new tabmap $tabmap"
                head -1 "$f" | sed -e 's/[,:]\|$/: \n/g' -e 's/"//g' >"$tabmap"
            fi
            ;;
        esac

    done
}

boot "$@"
