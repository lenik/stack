#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 1769 2010-09-21 07:32:29Z lenik $'
    short_opts="hqv"
    long_opts="help,quiet,verbose,version"

    if inst_id=`ec2-metadata -i`; then
        # "instance-id: xxx"
        inst_id=${inst_id#instance-id: }
    else
        # not an instance.
        exit 1
    fi

    inst_name=`rsubstecho $inst_id`
    inst_name="${inst_name%[*}"

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Mount Amazon EBS"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] VOL-NAME MOUNT-POINT"
    echo
    echo "Options: "
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    if [ $# != 2 ]; then
        help
        exit 1
    fi

    vol_name="vol:$1"
    mount_point="$2"

    volid_prev=
    atdev_prev=

    volid_req=`substecho $vol_name`
    atdev_req=

    while read dev mp fs opts x y; do
        if [ "$mp" = "$mount_point" ]; then
            echo "Current $mount_point is attached to $inst_name: $dev"
            atdev_prev="$dev"
            break
        fi
    done </etc/fstab

    echo "Query the status of attachment $volid_req"
    while read type vol inst dev status t0; do
        if [ "$type" != ATTACHMENT ]; then continue; fi
        if [ "$vol" = $volid_req ]; then
            if [ "$inst" = $inst_id ]; then
                echo "Already attached to this instance: $dev"
                atdev_req="$dev"
                break
            elif [ "$status" = "attached" ]; then
                echo "Already attached to a different instance, try detach first"
                if ! ec2-detach-volume $volid_req; then
                    echo "Failed to detach, try with --force?"
                    exit 1
                else
                    atdev_req=
                fi
            fi
            break
        elif [ -n "$atdev_prev" ]; then
            if [ "$inst" = $inst_id ] && [ "$dev" = $atdev_prev ]; then
                rsubstecho "Detach the old volume $vol"
                umount $atdev_prev
                if ! ec2-detach-volume $vol; then
                    rsubstecho "Failed to detach the old volume $vol, try with --force?"
                    exit 1
                fi
                while ec2-describe-volumes $vol | grep -q detaching; do
                    echo "Detaching..."
                done
                echo "Detached. "
            fi
        fi

    done < <(NO_SUBST=1 ec2-describe-volumes)

    if [ -z "$atdev_req" ]; then

        if [ -z "$atdev_prev" ]; then
            echo "Find next device name to attach"
            if ! atdev_req=`nextdev /dev/sd fghijklmnop`; then
                echo "No more available /dev/sd? name"
                exit 1
            fi
        else
            atdev_req=$atdev_prev
        fi

        substecho "Attach $vol_name to $atdev_req"
        if ! ec2-attach-volume $volid_req -i $inst_id -d $atdev_req; then
            echo "Failed to attach. "
            exit 1
        fi

        while ec2-describe-volumes $volid_req | grep -q attaching; do
            echo "Attaching..."
        done

        echo "Resize2fs to fill any expansion"
        resize2fs $atdev_req
    fi

    # 2, mount
    if [ ! -d $mount_point ]; then
        echo "Mount point isn't existed. "
        exit 1
    fi

    if lineconf -e /etc/fstab $mount_point \
            "$atdev_req $mount_point ext3 defaults 0 0"; then
        echo "Updated entry in /etc/fstab. "

        echo "Unmount $atdev_req"
        umount $atdev_req
    fi

    echo "Mount $atdev_req on $mount_point"
    mount $mount_point

    exit 0
}

boot "$@"
