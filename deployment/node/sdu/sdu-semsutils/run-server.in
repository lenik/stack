#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="d:hqv"
    long_opts="debug-port:,help,quiet,verbose,version"
    debug_port=
    headless=1
    DEFAULT_DEBUG_PORT=7788

    declare -A servers
    declare -A modpath

    # servers['people']=com.bee32.sem.people.SEMPeopleServer
    while read p; do
        [ -z "$p" ] && continue
        qn="${p##*/java/}"
        qn="${qn%.java}"
        qn="${qn//\//.}"
        stem="${qn##*.}"
        stem="${stem#SEM}"
        stem="${stem%Server}"
        stem=`lc -e "$stem"`
        servers[$stem]="$qn"

        # ../module/src/main/java/...
        dir="${p%%/src/*}"
        modpath[$stem]="$dir"
    done < <(find -name '*Server.java')

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] "
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] <server-name>"
    echo
    echo "Options: "
    echo "    -d, --debug-port=PORT   Enable remote debug"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
    echo
    echo "Discoverred server names:"
    for k in "${!servers[@]}"; do
        v="${servers[$k]}"
        dir="${modpath[$k]}"
        echo -e "        $k: \t$dir ($v)"
    done
}

function setopt() {
    case "$1" in
        -d|--debug-port)
            debug_port="$2"
            if [ -z "$debug_port" ]; then
                debug_port=DEFAULT_DEBUG_PORT
            fi
            ;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -z "$1" ]; then
        help
        return 1
    fi

    server="${servers[$1]:-$1}"
    shift
    _log1 "Run server $server"

    simple_name="${server##*.}"
    if ! classfile=`find -name "$simple_name.class" | grep -v WEB-INF/classes`; then
        quit "Can't find class $server"
    fi

    trim1="${classfile%/target/classes/*}"
    trim2="${classfile%/WEB-INF/classes/*}"
    if [ "$trim1" != "$classfile" ]; then
        module="$trim1"
        _log1 "Found jar-module $module"
    elif [ "$trim2" != "$classfile" ]; then
        # target/*-SNAPSHOT /WEB-INF/...
        module="${trim2%/target/*}"
        _log1 "Found war-module $module"
    else
        quit "Can't determine module directory from path $classfile"
    fi

    _log1 "Enter into $module"
    cd "$module" || exit 1

    sysprops=()
    nsysprop=0
    if [ "$headless" = 1 ]; then
        sysprops[nsysprop++]=-Djava.awt.headless=true
    fi

    if [ -z "$debug_port" ]; then
        _mvn exec:java \
            -Dexec.mainClass="$server" \
            "${sysprops[@]}" "$@"
    else
        debug_opts=(
            -classpath %classpath
            -Xdebug
            -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=$debug_port
            )
        _mvn exec:exec \
            -Dexec.executable="java" \
            -Dexec.args="${debug_opts[*]} $server" \
            "${sysprops[@]}" "$@"
    fi
}

function _mvn() {
    _log1 "Execute mvn $*: "
    if [ $LOGLEVEL -ge 2 ]; then
        echoli "$@"
    fi
    export MAVEN_OPTS="-XX:MaxPermSize=128m"
    mvn "$@"
}

boot "$@"
