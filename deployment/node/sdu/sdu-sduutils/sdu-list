#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 1731 2010-09-19 20:34:56Z lenik $'
    short_opts="sdhqv"
    long_opts="svg,display,help,quiet,verbose,version"

    format=
    display=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] List SDU Packages"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -s, --svg               output SVG graphics"
    echo "    -d, --display           open the graphics with ImageMagick"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -s|--svg)
            format=svg;;
        -d|--display)
            display=display;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -z "$format" ]; then
	aptitude search '^sdu-'
    else
	pkgs=`apt-cache pkgnames sdu-`
	tmp=`tempfile`
	apt-cache -o APT::Cache::GivenOnly=1 dotty $pkgs \
	    | boxfx sdu- style=bold color=green \
	    | fdp -T$format >$tmp
	if [ -n "$display" ]; then
		$display $tmp
	else
		cat $tmp
	fi
	rm -f $tmp
    fi
}

boot "$@"
