#!/bin/bash
    RCSID='$Id: bash.sh 1427 2010-08-25 04:39:31Z lenik $'
    short_opts="pK:C:hqv"
    long_opts="preserve,private-key,cert,help,quiet,verbose,version"
    . /usr/lib/bash/cliboot

    preserve=
    private_key=
    cert=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Bash_simple_cli_program_template"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTIONS]"
    echo
    echo "Options: "
    echo "    -p, --preserve          don't remove source files"
    echo "    -K, --private-key=KEY   specify private key to use"
    echo "    -C, --cert=CERT         specify x509 cert to use"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -p|--preserve)
            preserve=1;;
        -K|--private-key)
            private_key="$2";;
        -C|--cert)
            cert="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ ! -d ~/.ec2 ]; then
        _log2 "Create ~/.ec2"
        mkdir -p ~/.ec2
    fi

    if [ ! -f "$private_key" ]; then
        echo "Private key file $private_key isn't existed. "
        exit 1
    fi

    if [ ! -f "$cert" ]; then
        echo "X509 Cert file $cert isn't existd. "
        exit 1
    fi

    _log0 "Install to user defaults"
    install -m 600 "$private_key" ~/.ec2/private_key
    install -m 600 "$cert"        ~/.ec2/cert

    if [ "$preserve" != 1 ]; then
        _log0 "Remove source files for safe reason"
        rm -f "$private_key"
        rm -f "$cert"
    fi
}

boot "$@"
