#!/bin/bash

for envf in ../../.env ../.env .env; do
    if [ -f $envf ]; then
        . $envf
    fi
done

for d in "$@"; do

    mkdir -p $d
    echo '*.tar.gz' > $d/.gitignore

    cd $d

    autoinit
    vercomp -i minor

    cat <<EOT >post-install.sh.in
#!/bin/sh
# master-file
EOT

	cat <<EOT >pre-remove.sh.in
#!/bin/sh
# master-file

# Pre-Remove script should always exit 0 to force the state.
exit 0
EOT

    chmod a+x *.sh.in

    cat <<EOT >>Makefile.am

setup_SCRIPTS = \\
    post-install.sh \\
    pre-remove.sh

EXTRA_DIST = post-install.sh.in pre-remove.sh.in
CLEANFILES = post-install.sh    pre-remove.sh

post-install.sh: post-install.sh.in Makefile
	\$(do_subst) <\$(srcdir)/post-install.sh.in >\$@

pre-remove.sh: pre-remove.sh.in Makefile
	\$(do_subst) <\$(srcdir)/pre-remove.sh.in >\$@
EOT

    git add .

    # reconf2 after added. so exclude gen stuff.
    autoreconf2 -is
    rm -fr autom4te.cache

    # -i indep binary.
    . dh_make-autover --createorig -i

	cd debian
		mv postinst.ex postinst
		mv prerm.ex    prerm
		mv postrm.ex   postrm

		line=`grepl "configure)" postinst`
		sedit postinst sh -c "head -$line; \
			echo \"        /usr/share/setup/$d/post-install.sh\"; \
			cat"

		line=`grepl "deconfigure)" prerm`
		sedit prerm sh -c "head -$line; \
			echo \"        /usr/share/setup/$d/pre-remove.sh\"; \
			cat"

		chmod a+x postinst prerm

		vi control
	cd ..

	for x in "$d" '*.log' '*.ex' '*.EX' '*.substvars' 'files'; do
            echo "debian/$x" >>.gitignore
        done

	git add debian/{control,postinst,prerm,postrm,docs,rules,copyright,compat,README.*}

    # makelook

	cd ..

	git commit -m "$d is initialized by sdu-creator" "$d"

done
