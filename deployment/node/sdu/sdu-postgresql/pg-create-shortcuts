#!/bin/bash
    RCSID='$Id: bash.sh 1427 2010-08-25 04:39:31Z lenik $'
    short_opts="n:u:p:hqv"
    long_opts="help,quiet,verbose,version"
    . /usr/lib/bash/cliboot

    name=
    user=postgres
    port=5432

    BINUTILS=(
        clusterdb
        createdb
        createlang
        createuser
        dropdb
        droplang
        dropuser
        pg_dump
        pg_dumpall
        pg_restore
        psql
        reindexdb
        vacuumdb
    )


function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Install postgresql binutils for specific cluster"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] BINDIR"
    echo
    echo "Options: "
    echo "    -n, --name=NAME         take name- as prefix"
    echo "    -u, --user=USER         sudo into this user"
    echo "    -p, --port=PORT         port number of the cluster"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -n|--name)
            name="$2";;
        -u|--user)
            user="$2";;
        -p|--port)
            port="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    if [ -z "$name" ]; then
        echo "cluster name isn't specified. "
        exit 1
    fi

    if [ -z "$1" ]; then
        echo "BINDIR isn't specified. "
        exit 1
    fi
    bindir="$1"

    for f in "${BINUTILS[@]}"; do
        prog_file=/usr/lib/postgresql/8.4/bin/$f
        shcut="$bindir/$name-$f"

        echo "Create shortcut $shcut"
        cat <<EOT >"$shcut"
#!/bin/sh
    sudo -u$user $program -p$port "$@"
EOT
        chmod a+x "$shcut"
    done

}

boot "$@"
