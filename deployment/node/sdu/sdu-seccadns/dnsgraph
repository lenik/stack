#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 1853 2010-09-29 01:35:59Z lenik $'
    short_opts="O:hqv"
    long_opts="output:,help,quiet,verbose,version"
    output=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Generate a alias-graph from BIND .db file"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] FILE-LIST (*.db)"
    echo
    echo "Options: "
    echo "    -O, --output=FILENAME   Specify output file instead of tmpfile"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -O|--output)
            output="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    clean=0
    if [ -z "$output" ]; then
        output=`tempfile -s.png`
        clean=1
    fi

    cat "$@" | gen | dot -T png >$output

    if [ "$clean" = 1 ]; then
        display "$output"
        rm -f $png
    fi
}

function gen() {
    echo "digraph {"
    echo '    rankdir = "RL"; '
    echo '    bb = "0, 0, 100, 600"; '
    echo "    node [ shape = box3d ]; "

    # foo 'A'|'CNAME' bar ;...
    while read name rt parent comment; do
        if [ "${name:0:1}" = ';' ]; then
            if [ "${name:1:1}" = ';' ]; then
                name="${name:2}"
            else
                continue
            fi
        fi

        if [ -z "${rt//[0-9]}" ]; then
            rt="$parent"
            if [ "${comment/;}" = "$comment" ]; then
                read parent comment < <(echo "$comment")
            else
                parent="$comment"
                comment=
            fi
        fi

        id="_${name//[^a-zA-Z0-9]/_}"
        parent_id="_${parent//[^a-zA-Z0-9]/_}"
        comment="${comment#;}"
        comment="${comment# }"
        label="$name";
        if [ -n "$comment" ]; then
            label="$label\n$comment"
        fi

        case "$rt" in
        A)
            echo "    $id [ label = \"$label\" ]; "
            ;;

        CNAME)
            echo "    $id [ label = \"$label\" ]; "
            echo "    $id -> $parent_id; "
            ;;
        esac

    done

    echo '}'
}

boot "$@"
